// Generated by gencpp from file utils/Localization.msg
// DO NOT EDIT!


#ifndef UTILS_MESSAGE_LOCALIZATION_H
#define UTILS_MESSAGE_LOCALIZATION_H

#include <ros/service_traits.h>


#include <utils/LocalizationRequest.h>
#include <utils/LocalizationResponse.h>


namespace utils
{

struct Localization
{

typedef LocalizationRequest Request;
typedef LocalizationResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Localization
} // namespace utils


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::utils::Localization > {
  static const char* value()
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const ::utils::Localization&) { return value(); }
};

template<>
struct DataType< ::utils::Localization > {
  static const char* value()
  {
    return "utils/Localization";
  }

  static const char* value(const ::utils::Localization&) { return value(); }
};


// service_traits::MD5Sum< ::utils::LocalizationRequest> should match
// service_traits::MD5Sum< ::utils::Localization >
template<>
struct MD5Sum< ::utils::LocalizationRequest>
{
  static const char* value()
  {
    return MD5Sum< ::utils::Localization >::value();
  }
  static const char* value(const ::utils::LocalizationRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::utils::LocalizationRequest> should match
// service_traits::DataType< ::utils::Localization >
template<>
struct DataType< ::utils::LocalizationRequest>
{
  static const char* value()
  {
    return DataType< ::utils::Localization >::value();
  }
  static const char* value(const ::utils::LocalizationRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::utils::LocalizationResponse> should match
// service_traits::MD5Sum< ::utils::Localization >
template<>
struct MD5Sum< ::utils::LocalizationResponse>
{
  static const char* value()
  {
    return MD5Sum< ::utils::Localization >::value();
  }
  static const char* value(const ::utils::LocalizationResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::utils::LocalizationResponse> should match
// service_traits::DataType< ::utils::Localization >
template<>
struct DataType< ::utils::LocalizationResponse>
{
  static const char* value()
  {
    return DataType< ::utils::Localization >::value();
  }
  static const char* value(const ::utils::LocalizationResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // UTILS_MESSAGE_LOCALIZATION_H
